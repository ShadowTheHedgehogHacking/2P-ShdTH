802cele8-- ??


801777c4 (reads stgid) - changing to 800 here leads to load
8017707c lwz reads stgid
800b7464 readsstgid


----
801a206c is bge for stgID (looks for various cases, sets special r3) - necessary
to trigger
need to patch 801a206c to always for instead of lwz r0, 0x00A8 (r3) needs to
ldi r0, 800
->
C21A206C 00000001
38000320 00000000

next need to patch camera to lock on to 2P, simply by making it think its stg800
80178380 lwz r4, 0x00A8(r29) becomes
ldi r4, 800
->
C2178380 00000001
38800320 00000000
----------------
Camera might be at 80176c4c


---------

8017707c controls 2p partner spawn
so lwz r4, 0x00A8(r4)
becomes
C217707c 00000001
38800320 00000000
--------------------
***CAMERA CALLs checked up to 801ce93c beq- call

-------
possible ones within that small area:
80176c4c lwz r4 (but thats in pausefunc)
--
true value is in 801ce8f4 jumps to 80176C3C which is in PAUSEFUNC
original instruction:
808300a8

80176c4c becomes:
38800320

----
I want to overwrite at 801c38f4 which is bl to 0x80176C3C
machine code: 4bfa8349

I need to:
mr r25, r30 #backup real data
li r26, 800 #load new data
lis r24, 0x8058
subi r24, r24, 10592
lwz r26, 0x00A8 (r24) # load data from mem
stw r26, 0x00A8 (r24)


###WIP

li r26, 800
lis r24, 0x8058
subi r24, r24, 10592
stw r26, 0x00A8 (r24)
bl 0x176C3C

###
li r26, 800
lis r24, 0x8058
subi r24, r24, 10592
stw r26, 0x00A8 (r24)
bl 0x176C3C
stw r30, 0x00A8 (r24)
---
simplier way:
replacing the -1 and leaving the branch alone
C21CE8F0 00000003
3B400320 3F008058
3B18D6A0 935800A8
3880FFFF 00000000

and also needed:
after the branch:
C21CE8F8 00000002
93D800A8 80030008
60000000 00000000

-----------------------------------
STGID memory address: 8057d748

10.23.2018
layout object load distance:
38A00320 li r5, 800
80168e88
--------------
normal westopolis:
802038d0 reads StageID to determine for BattleMode / 2P <- occurs twice look into later for pulling 2P's UI out
80178930 reads StageID to edit UI on loading
8016f518 ???
80176c4c ??? x2
80178104 reads StageID to load relative music file
80178278 ???
801782c0 reads StageID to set missionID bits (controls missions/triggers)
80178360 ???
80168e88 ???
80168eec ???
801a2064 2P special bit cases (end here)
================
westopolis but change stageid to 800 at first read of stgid:
802038d0 reads StageID to determine for BattleMode / 2P <- occurs twice look into later for pulling 2P's UI out
80178930 reads StageID to edit UI on loading
8016f518 ???
80176c4c ??? x1*******
X doesnt read music
80178278 ???
801782c0 reads StageID to set missionID bits (controls missions/triggers)
80178360 ???
80168e88 ???
80168eec ???
801a2064 2P special bit cases (end here)

10.24.2018
apparently different for some reason:
--------------
normal westopolis:
802038d0 reads StageID to determine for BattleMode / 2P <- occurs twice look into later for pulling 2P's UI out
80178930 reads StageID to edit UI on loading
8016f518 ??? x2
80176c4c ???
80178104 reads StageID to load relative music file
80178278 ???
801782c0 reads StageID to set missionID bits (controls missions/triggers)
80178360 ???
80168e88 ???
80168eec ???
801a2064 2P special bit cases (end here)
================
westopolis but change stageid to 800 at first read of stgid:
802038d0 reads StageID to determine for BattleMode / 2P <- occurs twice look into later for pulling 2P's UI out
80178930 reads StageID to edit UI on loading
8016f518 ??? x1 [load starting positions?]
80176c4c ???
X doesnt read music
80178278 ???
801782c0 reads StageID to set missionID bits (controls missions/triggers)
80178360 ???
80168e88 ???
80168eec ???
801a2064 2P special bit cases (end here)

new strategy:
8057D752 (gamemode flag) is being checked and that is what determines if objects render when P2 is in distance
---
list of reads (while in level):
801e3ad4 -replace test: no apparent change
800cb5e4 LOAD ON DISTANCE
801fec38 //occurs many many times during load [halt]
801fe994 -replace test : failed
80201350 -[halt]
801ffe0c - on change removed P1's ring counter
(loop)
instruction for r0 38000001
801d9990 - tested : 
801d9258 - tested: negative
8041939c - tested: result: negative
80169c08 - I found you FAKER!

---
801fec38 replaced with 1
----
800cb5e4 (load on distance)
becomes:
C20CB5E4 00000001
38000001 00000000

and
80169c08 (unload on distance)
C2169C08 00000001
38000001 00000000

----------------------------------
10.25.2018 | Looking for UI change on gamemode flag
38000001 r0 to 1
list of reads:
8033ad54 ???
800bf268 ???
801fe94c ???
80201334 ???
800b8700 | P1/P2 Pause Mode (Restart etc, shows no UI in P2 if set to 0)
801ffde8
loop back to 8033ad54 [frame update]
------------
80201350 Hides SinglePlayer Timer/ChaosMeter, Score
801ffe0c ShowHide P2 Ring Count (in 2P mode hmm)
801e3ad4

801d9990 - P2 Sound Listener ON/OFF
Patch to
li r0, 1
C21D9990 00000001
38000001 00000000
========================================================
10.26.2018 | Looking for Pulley ?function? - maybe also related to air bug
========================================================
10.29.2018
looking for hurt call
807D7838 (word) - anim state?
8060B6400 (references)
=======================
11.1.2018
- looking for hurt activator, found updater for anim (same as above, still having crashing issues when looking for other reads)
looking for ss activator, within stageid
checking here first:
8027f098 checks for stgid 710, promising - locks ?gravity? (superstate seems to not depend on this)
-- superstate occurs after 801783ac, but before 8027f098
HELPFUL ADDRESS : 801783ac (after layout, before level)
800b7464 - after this controls to set SuperShadow on or off (later on)
suspect:
80176c4c in PAUSEFUNC
-> 8017710c cmpwi r3,0 
8000942c beq -> zz jump r3,0 (unrelated, loading func?)
....
this suggests PAUSEFUNC might be more important for other things...
just like the 2P check, 80177108 is caller, same spot ....
When the stage is 'non-super' [e.g. 201] -> the rlwinm. results in CR register updating, r0 not updating.
When 'super' (710) -> rlwinm. results in r0 updating, CR not updating
the rlwinm. occuring at 80177118 is the key
noping the beq-:
SuperShadow testing version no flying - (no mission overwrite fixed)
0457670c 000003e7
C217711C 00000001
60000000 00000000

breakpoints:
8027f098
800b7464
8017710c
mbreakpoint: 8057d748
==============
11.2.2018
looking for ring decrement (for onhurt call and activator for SS)
backtrack on decrement:
800af354

800af364 -> jumps to 800af3bc if maintain superstate
800af368 if rings are 0 and super state active (this is supercheck?)
does beq- at 800af37c -> goes to 0x800AF3B0

If 800af370 is nop'd shadow dies on ring loss
If 800af234 is nop'd, Ring Loss Count continues forever 
(800af2dc bl is called in both situations)

onHurt():
promising:
80178b20
two callers, has two calls

--
800af2fc does not take the beq-
its 800af324 cror 2, 1, 2 -> check for 1 second has passed (not here either...)
bne- at 328 -> takes jump when not deactivating, 

: Turn 800af2e4 into bne (never disable supershadow) ... suggests the turnoff is within
the explored func
C60AF2E4 800AF3BC
SuperShadow NoFlying TestVer v0.2 [dreamsyntax]
c217711c 00000001
60000000 00000000
c60af2e4 800af3bc

--
onhurt():
800b7e28: noping results in ring count not diminishing, so assume:
80178B20 is func that calls ring count loss, dropped rings and hurt anim still occurs but count remains same.

------------
11.3.2018
after playtesting, realized Chaos Blasts breaks out of air glitch, so using that instead.
Chaos Control is easier to do than originally thought:
Chaos Control diminish rate:
800a49e8 lwz r5, 0x002C(sp)
need to half it
original is : ffffffe8 (-24)
needs to be:
FFFFFFF4 -> just addi 12
for simplicity, only altering iwthin the same func (8016f0cc)
so 8016f0d4 cmpwi r5, 0 becomes:

cmpwi r5, 0
addi r5, r5, 12
->
C216F0D4 00000002
2C050000 38A5000C
60000000 00000000

fixing splitscreen with CC (my understanding of gecko if must be wrong):
0457d70b 00000001
2A57D768 00000001
0457D703 00000001

2A57D768 00000000
0457D703 00000000

---
Getting UI to work (and not break bosses)
This way will probably break 2P VS:
801fec3c cmplwi r0, 0 (is story game mode)
I want 2 UI to show (realtime check), so nop the beq-
at: 801fec40 -> controls to show WeaponUI / DashPickupsEtc
->
801d9258 | ?? repeats many times
---
801fe994 ?? (fe99c) controls ammo
80201350 | hides/shows Dark/Hero Scores
801ffe0c | hides/shows P2 ring counter (numbers)
801e3ad4 | ???
-----------------
On stage initialize [looking for load rings UI instead of chaos bars, causes crash if they are not loaded in]
802bebf4 | x2
<loads>
800c0508 | turn bne to beq (controls load/unload chaos bars)
801ff654 | (nop 801ff65c)
80201f10 | (nop 80201f18)
8020075c | *for rings icon (nop 80200764)
<loads>
801fec38 (controls to show WeaponUI / DashPickups Etc)


final codechanges:
nop 801ffe0c (ringcounter)
nop 801fec40 (UI indicators, weapon ammo for P2)
nop 801ff65c (loading prereq)
nop 80201f18 (loading prereq2)
nop 80200764 (load ring icons)
maybe nop 80201358 (hide scores)
nop 801fe99c


:
C21FFE0C 00000001
60000000 00000000
C21FEC40 00000001
60000000 00000000
C21FF65C 00000001
60000000 00000000
C2201F18 00000001
60000000 00000000
C2200764 00000001
60000000 00000000

hide scores: (incase I want to shift ringUIlater)
C2201358 00000001
60000000 00000000

enable ammo counter:
C21FE99C 00000001
60000000 00000000


2P UI code v1 [dreamsyntax]
C21FFE0C 00000001
60000000 00000000
C21FEC40 00000001
60000000 00000000
C21FF65C 00000001
60000000 00000000
C2201F18 00000001
60000000 00000000
C2200764 00000001
60000000 00000000
C2201358 00000001
60000000 00000000
C21FE99C 00000001
60000000 00000000


---11.9.2018
Chunk Hunting
- There are cam0-cam4, cam0 can move, (if P2 uses turret/CC, cam0 moves to P2)
- cam0-4 is always active, just might not be attached to objects
- cam0 position is responsible for chunk load/unload

There are two splitscreens: 0, 1 that attach to the available cams, they have their own render separate from cam

Break on splitscreen type
mem: 8057D703
-> 801e4c28 is branch for case 0, should hook splitscreen to cam0

805F0174 || refresh render for current split, can cause artifact tears/noflush by changing from r31 (current split)
membreak on 8057d70c
801e4b5c stw r0, 0x006C (puts cam0 into current selected cam)
-----------
New attempt:
8057D700 || SS Type

When SS Type = 1
8057D704 || Split 1 -> Removing two calls (bl to 80271BA8) unhooks splitscreen from cam
8057D708 || Split 2 -> Removing one call  (bl to 80271BA8) unhooks splitscreen from cam
(for split mode)

When SS Type = 2
8057D704 || Split 1 -> (same as SS=1, but needs to be nop'd separate as this is a unique branch)
-- one of the bl was already nopped. non-nop was: 801e4d00 to 80271BA8
                                     shared (already nop) was 801e4b80
8057D708 || Split 2 -> (same as SS=1)

When SS Type = 0
8057D704 || Split 1 -> (also calls already nopd)
            new bl at : 801e4c48, goes to same address
			
The above only unhooks splitscreen from existing cam (cam still follows respective players, we don't see it updated on the screens)
However 80271BA8 function somehow is knowing what cam to hook to, so next search within this func

break 80271BA8

nop at 80271c68 -> seems to move cams back to start? Or split cannot hook to cam
-> nop at 80487700 causes same behavior, check this one deeper
80271c64 li r5, 2
-------
changing 801634a0 to r5, 1 instead of 0 seems to make _ds1.dat objects not load for p1
               b4 as well

at 8047f88c			 
-> is reading cam values!!!! 
Cam values are changed based on SS Type and SS Split bits!!
Done for today, but this should be on the right track

---
11.10.2018
Chaos Control Music Searching
800a4ebc bl to 8027AB1C, noping this results in blue/red effect going away, no other side effects
800a4f0c bl to 8007939C, noping this results in no invulnerability while in chaos states
800a4f80 bl to 800A2854, noping this results in no particle emit for initial activation of chaos state
800a4fcc bl to 80076CA8, noping this results in no chaos power activation
                         -> intro sound (RRRRR etc) still plays, music does not
800a4ff0 bl to 801D3888, noping this results in no introsound, no chaos powers idle music
 
8004ed6c 
    ed48
	f470
-------
PlayerBasedLoading

14 = RedShadow
15 = YellowShadow
16 = PinkGunShadow
17 = BlueGunShadow
18 = OrangeLauncherShadow
19 = GreenLauncherShadow

801770ac lwz r3, 0x013C (r4) , r3 holds P1 selected char
      b0 r30 holds p2 selected char
	  
string for shadow.one : 804f7d40 
^ deadend, files loaded once at initialize game.
2P mod appears to reload 2P models but halts on change. Memallocated earlier?
---
Checkpoint Hunting
80575FE4 = X Trans of CP #1
80117738 = GLTranslateMatrix, noping results in no fadeout, no warp, control lock (due to trigger wait)
-> 80129628 ^ same as above
80129de4 -> update player position()?
---
11.14.2018
8047f88c
---
11.19.2018
searching for 2P android weapon mode / ?supershadow weapon mode?
possible related memaddresses:
805766F0 | obj data?
805766F4 || ! -> instruction 801fe898
805766F8
and
80B3AD68
80B3ADA8
------------
abort,
new strategy:
load p1 = 15 (yellow)
-> observe if any calls differ for 17 (bluegun)
8057D7DC :: readmem

noping results in :
801770e4 | No player1 spawn. P2 is still spawned. Cam spawns in middle of map and fully renders (cam0) - USE FOR CHUNKS LATER!
801770f4 | No player2 spawn??
801770fc | T-pose no control, blinking still occurs  -> try here
80177100 | ??
80177108 | ??

-> Allows me to combine 2P Spawn Enabled and 801770f4 to create:
$Play as Chosen Character in 1P Mode [dreamsyntax] 
C217707C 00000001
38800320 00000000
C21770F4 00000001
60000000 00000000
*Select P1's character in 2P VS, back out at P2's selection. P1 will retain the character for use in 1P modes

next step:
801770fc
80176f28 | nop -> endless fall no respawn / blackout
STG504|| EXP


---
Super Shadow in devil doom stage no flying
C227F098 00000001
2C0002C7 00000000

-------------------------------
Shadow The Hedgehog US | GC
```$Play as Chosen Character in 1P Mode v2 [dreamsyntax] 
C217707C 00000001
38800320 00000000
C21770F4 00000001
60000000 00000000
C240DB30 00000001
38000000 00000000
*Select P1's character in 2P VS, back out at P2's selection. P1 will retain the character for use in 1P modes. No controller needed in slot 2 to choose character.
```
From above, 
8040db30 loads status if controller 2 is in. Set to 0 if plugged in, 1 otherwise.
Force li r0, 0
C240DB30 00000001
38000000 00000000
----------------------------
11.21.2018
Back to 2P stuff
memaddress:
8056ed78 || P2 Inputs
8056ed88 || P2 X-Axis ControlStick
8056ed8C || P2 Y-Axis ControlStick
----------
800a8608 || reads Slot 1 / 2 input for buttons

-> Player 3
mem 8056eda4 ||P3 Inputs
2P to 3P offset is 0x2C
conveniently the lwz checks already are set with offset 0, so:
lwz r3, 0(r4) -> lwz r5, 2C(r4).... 44(r4) (decimal)
-> 8064002C
C20A8608 00000001
8064002C 00000000

^ affects ALL controllers, need different strategy (oncall?)
-------------
11.22.2018
800a85f4 | lwz r4, 0x0010 (r31)


r3 moves to r31, = 80f4c558 when checking 8056ed4c (Player 1 Input Buttons)
                   812f4130 when checking 8056ed78 (Player 2 Input Buttons)
target 800a85c4 mr r31, r3
::
perform a check if r3 = 80f4c558, continue as normal, else add 0x2C?
No, this is the input polling not specific to parner object.
-> search for partner
8040da78 || ???
803499c8 || ???
800a8608 || In-game actions check for button press (all controllers, doesn't affect menus)
---------------
8009f76c || noping results in same behavior as 800a8608
^ bctrl -> 8006f7c0 and 800a19a4

in 800a19a4 -> deeper : 800a1df4 -> nop same behavior
-> bl to 8009fd64, only caller
---------
BP list :
8009f76c
800a1d9c
800a1df4
--------------
begin 8009fd64:
prior to 8009ff58, noping results in no button input
8009ff58 | ??
8009ff94 | noping results in short burst chaos control (no checking bar?)
800a0038 | near box to grab UI indicator check
800a00ec | noping results in unable to spindash, sort of a super ring-dash
8009ffe8 | ???
800a0128 | noping results in spamable slide animation (X button)
800a0174 | spamable spindash
800a01ac | ???
800a0234 | spamable slide animation (B button)
800a0280 | spamable spin-kick mid air (B button)
800a02b8 | noping -> A button does nothing (P1 and P2 controls) r3 cycles 801309268 and 80f0bd68
800a0390 | ??
800a03c8 | ??
800a0430 | ??
800a0680 | ??
800a0d0c | ??
800a0ee4 | noping -> X button does nothing
^useful for dropdash later

new approach:
mem:805F2B04 partner player to AI timer
800a19c4 bne (if control 2 input changes, activate AI timer)
------------
11.27.2018
SuperShadow searching part 2
flying mode:
8027f0ac bl to 0x80076CA8, common function used in various places
Try altering r3 and r4 values, maybe call this function myself on button press?
changing addi r3 168 to 936 -> results in no fly
                     to 424 -> same as above
					 revert to 168 -> works 
					 268 -> no flying
changing r4 = 37 to 39
-> Try from P1 Y in glyphic canyon reads, check earlier mem access
------------
11.30.2018	
Checkpoint warping for p2
break on write to freezeinput 8057D768
-> occurs after position move
set emu to 10%, pause frame on black screen for checkpoint warp
save state and 'step out' < repeat until RO Xpos changed
found
function: 801d076c || 801d0788 nop results in camera detach -> not split detach, true cam detach
                      chunks are tied to cam0 100% confirmed
falling back to checkpoint hunting method:
80117684 is confirm click

BP 801176a4
   80117688
   80117d3c
memr 80575fe4
----
Gravity Switcher
writemem:807D3970 (animation state of switches)
80247eb0 | set gravity for floating switches (switch + restrict input)
80247868 | set gravity on death/restart
80246d00 | set gravity for ground switches (switch + no restrict input)
inside gravity switcher func: 
80293964 | controls setting player gravity
attempt:

replace 80293964 with: (copy of shared func)
lfs f0, 0(r4)
lfs f1, 0x0004(r4)
stfs f0, 0(r3)
lfs f0, 0x0008(r4)
stfs f1, 0x0004(r3)
stfs f0, 0x0008(r3)

==
C2293964 00000004
C0040000 C0240004
D0030000 C0040008
D0230004 D0030008
60000000 00000000
^ working to change write to direction
12.1.2018
(confirmed direction type and relation to 3 set floats r3, r3+0x4, r3+0x8
reads of floats:
8034df98
801d55f8
80169cbc
8040c154
80169cbc < loop
80163388
800b617c
800a41f8
800a3bd4
8033e57c
800091d0
800a3c8c

---
gravity testing (see gravity folder for images)
Switcher's state:
0: down(facing behind)
1: up(facing forward)
2: left(facing behind)
3: right(facing behind)
4: forward(facing down)
5: backward(facing up)


Level begins with value 0
Switcher#  : State  | store that modifies
1 : 2 | store1
2 : 1 | store2
3 : 0 |  ???? (no change) -> probably because it sets gravity to default game (down)
4 : 3 | store1
5 : 5 | store3
6: 4 | store3
7: 1 | store2
8: 2 | store1

floats of interest:
store1 8060B3F0
store2 8060B3F4
store3 8060B3F8

break at instruction 80293964 for future testing
---------------
12.4.2018
Attempting to hook cam1 to partner // chunks research ::
break at 801d077c let next function run, break at 801d0784
p1/p2 no change:
before:
r0: 8004ed64
r3: 80b48690
after:
r0: 801d0784
r3: 8056ee14
----------------
targeting 0788 instead
-> in function
take the bne+ to d19c (same func)
d1a8 never seems to jump (level specific?)
d1b0:

CameraBigUpdater:
80270618 -> calls a lot of functions (master cam update?)
nop to determine:
638 -> ???
640 -> ???
64c -> halt
660 -> halt
66c -> halt
678 -> (noping results in many issues, crashes too) controls CC camera event/partners/spawn/flyables
6b0 -> snaps camera in certain areas (glyphic canyon start down slope)
6b4 -> triggers on pause (halt if removed)
6bc -> halt
6c4 -> ???
6d4 -> stops following player position (events only), doesnt detach
6e4 -> ???
6f4 -> halt
700 -> halt on event trigger
70c -> ???
72c -> halt
bctrl at 80270748 (not checked)
754 -> ???
760 -> ???
770 -> freezes game when C stick is moved, but not halt (restoring instruction resumes game)
77c -> render()? freeze (not halt) same as above, but no C-stick input
7a8 -> breaks cams (red/fogbg color on change (event, cc, cb))
7b4 -> unhooks cam from player on first event
7c4 -> unhooks cam from player on C-stick
7dc -> ???
7e4 -> ??? (something with event, trigger on chaos blast? / certain triggers only?)
7f4 -> ???
800 -> don't update cam position at all
818 -> ???
824 -> don't render? (fog bg color)
830 -> detach splits from cams
83c -> ???
848 -> ???
854 -> ???
860 -> ???
870 -> ???
87c -> ???
884 -> ???
89c -> ???
8b0 -> halt on chaos control -> touch event
8bc -> ???
8d0 -> ???
8dc -> ???
8e8 -> camera warps somewhere for a moment on ?event end?
8f4 -> ???
900 -> no ccg/cb event cameras / camera warp issue on checkpoint (bingo highway)
---
Disable Cinematic CameraEvents (broken / bad)
C2270678 00000001
60000000 00000000
*Disables ChaosBlast/Control, Partner Events, Flyables
-> need to edit the function instead of NOPing it
-> affecting hook altogether on level start in some cases

---
$Camera Updates for Events Only [dreamsyntax]
C22706D4 00000001
60000000 00000000
*Disables normal player position update, cam is still tied to player its attached to
*only updates camera for events based on attached player's position

In search of onHook:
checking 801ce8f0 (spawn hook to P2)

On revisiting, changing things up:
for instruction 801ce900:
nop instead of adding stgid to the stack
^ confirmed works
Now I can update camera attach to p2 to be more efficient and remove the two 'camfix' codes
Old camfix:
c21ce8f0  00000003
3b400320  3f008058
3b18d6a0  935800a8
3880ffff  00000000
c21ce8f8  00000002
93d800a8  80030008
60000000  00000000
becomes:
C21CE900 00000001
60000000 00000000
-------------
Searching within 2nd func for attach cam:
Copy over:
addi r3, sp, 8
stwu sp, -0x0010(sp)
mflr r0
stw r0, 0x0014(sp)
stw r31, 0x000C(sp)
mr r31, r3
addi r3,r4,4
mr r4,r5

C200D284 00000005
38610008 9421FFF0
7C0802A6 90010014
93E1000C 7C7F1B78
38640004 7CA42B78
60000000 00000000

overwrite actual call 8000d288
--
checking stuff after:
801ce98c || same 'bingo highway' issue
801ce99c || blt+ (loop for cams)
-----------
12.7.2018
Camera initialize 
80178384

FOV crunch/blurr speed effect are done to the splits not the cams (makes sense)
health and lock on counters are drawn on splits not cams

r30 controls how many to loop cam hooks
80178XXX
388 | ???
390 | Texture Lighting?
394 | halt 
398 | ???
39c | ???
3a0 | ???
3a4 | Initialize pause menu UI
3a8 | ???
3b0 | ???
3b8 | ???
3c4 | halt
3d0 | ???
3d8 | halt
3e4 | halt
3f8 | return to menu after "quit"
408 | ???
414 | ???
420 | ???
42c | endless load (remove correct data?)
434 | ???
454 | ???
--------
Nothing of interest
Stepping out to the call from 801786d4
------
Back inside hookCamToPlayerLoop:
on loop of blt+ at
801ce99c
jump to 801ce960
:
calls same param to function 0x03A0330
calls 801C97A8 at 801ce978 with param of current i in loop
-------
Within 801c97a8::
nop 801c97c0 -> no cam attach (setting xyz values of cam?)
d4 -> halt
e4 -> halt
0c -> halt
18 -> halt
2c -> halt
44 -> ???
4c -> halt
54 -> Break C-Stick Camera Control
60 -> Event cam issues
70 -> ???
90 -> halt on event trigger
9c -> ???
---------
Exploring 801c97c0:
nop first iteration, let run 2nd iteration::
causes no p1 attach, p2 attach::
this is the function!
swap params as test
------
801ce970 to call 978::
r3,r4,r5
813216a0
81321748
00000000

81321668
81321748
00000001
-- attempt 2:
809dc8c0
809dc818
0

809dc8f8
809dc818
1

args of interest:
r3 and r5
is r3 offset constant YES... except sign may be flipped -0x38 or + 0x38:
1st try : 0x38
2nd try : 0x38
          
3rd:
80f6dff8
80f6dfc0

4th:
80b43d10
80b43d48

80b454e8
.......
dead end, function not doing what I thought, only seems to move the 'point' the camera interacts with
-------------------
12.8.2018
checking from layout obj render fix
800cb5e4 (onload)
if 2p:
bl 80009548
r4 = 0
bl 80010244 | for p1
mr r31, r3
bl 80009548
r4 = 1
bl 80010244 | for p2
mr r0, r3
lwz  r3, 0 (r30)
mr r5, r0
mr r4, r31
bl 800CA644
jump to 800cb640
----
if 1p:
r4 = 0
bl 80010244 | count 3
mr r0, r3
lwz r3, 0 (r30)
mr r4, r0
bl 800CA820
(shared path resumes)

800cb3c8 (nop to remove set objects call)
800cb3c0
exiting out to 8004ed60
----
8004ecdc interesting behavior? Pre-load??
---------
12.9.2018
8004ec68::
random checks
804628f8
nop 804628fc
-----
801cf9dc | halt
801cf9e4 | cam pop-in/out
801cf9f8 | controlling camera zoom occasionally
---------
12.17
break mem for read cam X | 801cf9f8
write from : 807d77f8 to camX
(reading this)->
blank screen || 801c1190 [called by 8000e940] -> [called by 802706d4] -> [called by 8000d1b0] -> called by [801d0788] -> [called by 8004ed60 and 6c SETObjectLoad]
 || 801c7b64 [called by 801c70f4] -> [called by 801c1220]
801c7b8c [called by 801c70f4] -> [called by 801c1220]
802708e8
(the above is continuous checking)

801c4200 (only one caller, 801c41b0)
801c412c
-------
12.18
Android players weapon searching
801770e4 || r3 is argument of which character model (and others) to load in
e = Normal Shadow 
f = Yellow Android Shadow
11 = BlueGun Android Shadow
etc
8017709c handles the standard 1P mode spawn call
800ad2f4 | noping results in no controls on player (menus work)
800ad300 | noping results in T-pose no animation in ground
--
other calls do not seem related to weapon mode
deeper into 800ad2b4:
800ae034 (changing this seems to change both player type and weapon)
800adfbc bl to 0x80077304 (load model?)

801e256c calls 800ad3a8 too
----------------
801770e4 | leave as RedShadow
800adfd0 | change to BlueGun
800ad3bc | leave as BlueGun
800ad3e0 | leave as BlueGun
-> results in RedShadow, no gun
(confirmed)
801770e4 | BlueGun
800ae034 | OrangeCannon
-> results in OrangeCannon
::
FOUND
800adfbc (call to 80077304)
80077328 bl to 80079F04 (has r0 and r5 set to ShadowChar)
--- 80074314 also calls to 80079F04
80079fd8 (store value of player to mem)
-> not constant, changes
readmem:
8007a174
8008769c
80078c5c

015 until 3rd cycle -> results in backwards shooting blueandroid
